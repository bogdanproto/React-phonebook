{"version":3,"file":"static/js/581.2f47840d.chunk.js","mappings":"sLAEaA,E,QAAaC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kmC,sJCKxBC,EAAY,WAAO,IAADC,EAAAC,EAC7BC,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,MAJtBC,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aACaC,EAAMP,EAAnBQ,UAAaD,OAITE,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAClB,EAAAA,EAAU,CAACmB,SAAUN,GALP,SAAAO,GACfJ,GAASK,EAAAA,EAAAA,IAAUD,GACrB,IAG+CE,SAAA,EAC3CJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWZ,EAAS,UAAQ,IAAEa,YAAY,uBAC1CF,EAAAA,EAAAA,KAAA,KAAAD,SAAgB,QAAhBjB,EAAIS,EAAOY,aAAK,IAAArB,OAAA,EAAZA,EAAcsB,cAEpBT,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMZ,EAAS,aAAW,IACxBgB,KAAK,WACLH,YAAY,0BAEdF,EAAAA,EAAAA,KAAA,KAAAD,SAAmB,QAAnBhB,EAAIQ,EAAOe,gBAAQ,IAAAvB,OAAA,EAAfA,EAAiBqB,cAEvBJ,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAAQN,SAAC,YAG5B,E,kDCPA,EAvBc,WACZ,IAAQQ,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAAtBF,MACFd,GAAWC,EAAAA,EAAAA,MAQjB,OANAgB,EAAAA,EAAAA,YAAU,WACHH,GACHd,GAASkB,EAAAA,EAAAA,KAEb,GAAG,CAAClB,EAAUc,KAGZZ,EAAAA,EAAAA,MAACiB,EAAAA,GAAW,CAAAb,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAEJC,EAAAA,EAAAA,KAACnB,EAAS,KACVc,EAAAA,EAAAA,MAACkB,EAAAA,GAAgB,CAAAd,SAAA,EACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHC,EAAAA,EAAAA,KAACc,EAAAA,GAAa,CAACC,GAAIC,EAAAA,EAAAA,MAAajB,SAAC,gBAIzC,C,+IC1Baa,EAAclC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yMAaxBiC,EAAmBnC,EAAAA,GAAAA,IAAUuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,iNAa7BkC,GAAgBpC,EAAAA,EAAAA,IAAOwC,EAAAA,GAAPxC,CAAeyC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,8J,qHC3B/BwC,EAAoBC,EAAAA,GAAW,CAC1CC,KAAMD,EAAAA,KAAaE,SAAS,oBAAoBC,OAChDC,MAAOJ,EAAAA,KAEJK,UAAU,yCACVC,SAAS,2CACTC,QAAQ,gDACRC,IAAI,GACJN,SAAS,gCAGDnC,EAAkBiC,EAAAA,GAAW,CACxClB,MAAOkB,EAAAA,KAEJlB,MAAM,yBACNoB,SAAS,qBACTC,OACHlB,SAAUe,EAAAA,KAAaE,SAAS,wBAAwBC,SAG7CM,EAAmBT,EAAAA,GAAW,CACzCC,KAAMD,EAAAA,KAAaE,SAAS,oBAAoBC,OAChDrB,MAAOkB,EAAAA,KAEJlB,MAAM,yBACNoB,SAAS,qBACTC,OACHlB,SAAUe,EAAAA,KAAaE,SAAS,wBAAwBC,Q","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/LogIn.jsx","pages/Login/Login.styled.jsx","utils/shema.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  input {\n    width: 312px;\n    height: 48px;\n    padding: 8px;\n\n    border-radius: 10px;\n    border: 1px solid rgba(0, 0, 0, 0.4);\n    background: rgba(255, 255, 255, 0.08);\n  }\n\n  button {\n    width: 312px;\n    height: 48px;\n\n    padding: 10px 20px;\n    margin-top: 16px;\n    margin-bottom: 16px;\n\n    cursor: pointer;\n    text-align: center;\n\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n    border-radius: 5px;\n    border: 1px solid rgba(0, 0, 0, 0.4);\n    background-color: rgba(14, 100, 210, 0.9);\n    color: rgba(255, 255, 255, 0.9);\n\n    transition: background-color 0.3s, color 0.3s;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n    &:hover {\n      background-color: rgba(14, 100, 210, 1);\n    }\n\n    &:active {\n      background-color: rgba(14, 100, 210, 1);\n      transform: scale(0.98);\n      transition: transform 0.1s;\n    }\n  }\n  p {\n    position: absolute;\n    display: block;\n    padding: 8px;\n\n    font-size: 12px;\n    color: red;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { schemaLoginForm } from 'utils/shema';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/userAuth/operations';\nimport { FormStyled } from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schemaLoginForm),\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(logInUser(data));\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit(onSubmit)}>\n      <label>\n        <input {...register('email')} placeholder=\"Enter Your Email\" />\n        <p>{errors.email?.message}</p>\n      </label>\n      <label>\n        <input\n          {...register('password')}\n          type=\"password\"\n          placeholder=\"Enter Your Password\"\n        />\n        <p>{errors.password?.message}</p>\n      </label>\n      <button type=\"submit\">Login</button>\n    </FormStyled>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LogInStyled, LoginRegisterBox, NavLinkStyled } from './Login.styled';\nimport { routes } from 'utils/consts';\nimport { selectStatusAuth } from 'redux/userAuth/selectors';\nimport { clearContacts } from 'redux/contacts/contactsSlice';\n\nconst LogIn = () => {\n  const { token } = useSelector(selectStatusAuth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!token) {\n      dispatch(clearContacts());\n    }\n  }, [dispatch, token]);\n\n  return (\n    <LogInStyled>\n      <h1>PHONEBOOK</h1>\n\n      <LoginForm />\n      <LoginRegisterBox>\n        <p>Don't have an account?</p>\n        <NavLinkStyled to={routes.SIGIN}>Signup</NavLinkStyled>\n      </LoginRegisterBox>\n    </LogInStyled>\n  );\n};\n\nexport default LogIn;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LogInStyled = styled.div`\n  padding-top: 128px;\n  padding-bottom: 64px;\n  padding-left: 24px;\n  padding-right: 24px;\n  color: rgba(0, 0, 0, 0.8);\n\n  h1 {\n    margin-bottom: 48px;\n    text-align: center;\n  }\n`;\n\nexport const LoginRegisterBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 4px;\n  p {\n    color: rgba(0, 0, 0, 0.8);\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: rgba(47, 137, 252, 1);\n`;\n","import * as yup from 'yup';\n\nexport const schemaContactForm = yup.object({\n  name: yup.string().required('Name is required').trim(),\n  phone: yup\n    .number()\n    .typeError(\"That doesn't look like a phone number\")\n    .positive(\"A phone number can't start with a minus\")\n    .integer(\"A phone number can't include a decimal point\")\n    .min(8)\n    .required('A phone number is required'),\n});\n\nexport const schemaLoginForm = yup.object({\n  email: yup\n    .string()\n    .email('Email must be a valid')\n    .required('Email is required')\n    .trim(),\n  password: yup.string().required('Password is required').trim(),\n});\n\nexport const schemaSigninForm = yup.object({\n  name: yup.string().required('Name is required').trim(),\n  email: yup\n    .string()\n    .email('Email must be a valid')\n    .required('Email is required')\n    .trim(),\n  password: yup.string().required('Password is required').trim(),\n});\n"],"names":["FormStyled","styled","_templateObject","_taggedTemplateLiteral","LoginForm","_errors$email","_errors$password","_useForm","useForm","resolver","yupResolver","schemaLoginForm","register","handleSubmit","errors","formState","dispatch","useDispatch","_jsxs","onSubmit","data","logInUser","children","_jsx","_objectSpread","placeholder","email","message","type","password","token","useSelector","selectStatusAuth","useEffect","clearContacts","LogInStyled","LoginRegisterBox","NavLinkStyled","to","routes","_templateObject2","NavLink","_templateObject3","schemaContactForm","yup","name","required","trim","phone","typeError","positive","integer","min","schemaSigninForm"],"sourceRoot":""}