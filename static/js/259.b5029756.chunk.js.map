{"version":3,"file":"static/js/259.b5029756.chunk.js","mappings":"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","sources":["pages/PhoneBook/PhoneBook.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","utils/icons.js","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","utils/filter.js","components/LogOut/LogOut.styled.jsx","components/LogOut/LogOut.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/PhoneBook/PhoneBook.jsx","utils/shema.js"],"sourcesContent":["import styled from 'styled-components';\nimport { MdAddCircle } from 'react-icons/md';\nexport const PhoneBookStyled = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  padding: 24px;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  color: rgba(51, 51, 51, 1);\n`;\n\nexport const AddButton = styled.button`\n  position: absolute;\n  bottom: 28px;\n  right: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n\n  background-color: #ffffff;\n  border-radius: 50%;\n  cursor: pointer;\n  border: none;\n\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const PhoneBookHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  h3 {\n    font-size: 18px;\n  }\n`;\n\nexport const AddIconStyled = styled(MdAddCircle)`\n  width: 48px;\n  height: 48px;\n  color: rgba(14, 100, 210, 0.9);\n  cursor: pointer;\n  border-radius: 50%;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  transition: background-color 0.3s, color 0.3s;\n\n  &:active {\n    transform: scale(0.9);\n    transition: transform 0.1s;\n  }\n\n  &:hover {\n    color: rgba(14, 100, 210, 1);\n  }\n`;\n","import styled from 'styled-components';\nimport { RiFindReplaceLine } from 'react-icons/ri';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  width: 100%;\n  height: 40px;\n\n  border: 1px solid #ccc;\n  padding: 8px;\n  border-radius: 12px;\n\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  background-color: rgba(254, 254, 254, 1);\n\n  font-size: 14px;\n  font-weight: bold;\n  white-space: nowrap;\n\n  input {\n    height: 32px;\n    border: none;\n    flex: 1;\n    padding: 0;\n    outline: none;\n  }\n`;\n\nexport const FilterIcons = styled(RiFindReplaceLine)`\n  width: 18px;\n  height: 18px;\n  color: #131313;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterIcons, Label } from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const { filter } = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <Label>\n      <FilterIcons />\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Search by Name or Phone\"\n      />\n    </Label>\n  );\n};\n","import {\n  FcBusinessman,\n  FcBusinesswoman,\n  FcManager,\n  FcAssistant,\n  FcCustomerSupport,\n} from 'react-icons/fc';\n\nconst iconsSet = [\n  <FcBusinessman />,\n  <FcBusinesswoman />,\n  <FcManager />,\n  <FcAssistant />,\n  <FcCustomerSupport />,\n];\n\nexport default iconsSet;\n","import styled from 'styled-components';\nimport { TiDelete } from 'react-icons/ti';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 12px;\n  padding-bottom: 10px;\n\n  font-size: 14px;\n\n  border-bottom: 1px solid rgba(51, 51, 51, 0.2);\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n\n    background-color: #ffffff;\n    border-radius: 50%;\n    cursor: pointer;\n    border: none;\n  }\n`;\n\nexport const ContactBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const ContactBoxText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const NameContact = styled.p`\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  color: rgba(51, 51, 51, 1);\n`;\n\nexport const PhoneContact = styled.p`\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  color: rgba(51, 51, 51, 0.7);\n`;\n\nexport const DeleteIconStyled = styled(TiDelete)`\n  width: 20px;\n  height: 20px;\n  color: #ab0404;\n  cursor: pointer;\n\n  &:hover {\n    color: #ff0404;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: lightgrey;\n  overflow: hidden;\n  svg {\n    width: 32px;\n    height: 32px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useRef } from 'react';\nimport {\n  ContactItem,\n  ContactBox,\n  DeleteIconStyled,\n  PhoneContact,\n  NameContact,\n  ContactBoxText,\n  Avatar,\n} from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectLoader } from 'redux/contacts/selectors';\n\nexport const Contact = ({ id, name, phone, avatar }) => {\n  const isLoading = useSelector(selectLoader);\n  const dispatch = useDispatch();\n  const ref = useRef();\n\n  const handleDelete = evt => {\n    ref.current = evt.currentTarget.id;\n    dispatch(deleteContact(ref.current));\n  };\n\n  return (\n    <ContactItem>\n      <ContactBox>\n        <Avatar>{avatar}</Avatar>\n        <ContactBoxText>\n          <NameContact>{name}</NameContact>\n          <PhoneContact>{phone} </PhoneContact>\n        </ContactBoxText>\n      </ContactBox>\n      <button\n        id={id}\n        type=\"button\"\n        onClick={handleDelete}\n        disabled={isLoading && ref.current === id}\n      >\n        <DeleteIconStyled />\n      </button>\n    </ContactItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  padding-bottom: 40px;\n\n  height: 580px;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nexport const ContactsListText = styled.p`\n  font-size: 16px;\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toFilter } from 'utils/filter';\nimport iconsSet from 'utils/icons';\nimport { Contact } from 'components/Contact/Contact';\nimport { ContactListStyled, ContactsListText } from './ContactList.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectFilter,\n  selectLoader,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoader);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchContacts(controller.signal));\n\n    return () => {\n      controller.abort();\n    };\n  }, [dispatch]);\n\n  const filtredContacts = toFilter(items, filter);\n\n  return (\n    <ContactListStyled>\n      {Boolean(items.length) &&\n        (filtredContacts.length ? (\n          filtredContacts.map(({ id, name, number }, idx) => (\n            <Contact\n              key={id}\n              id={id}\n              name={name}\n              phone={number}\n              avatar={iconsSet[idx % iconsSet.length]}\n            />\n          ))\n        ) : (\n          <ContactsListText>Contacts not found</ContactsListText>\n        ))}\n      {!items.length && !isLoading && (\n        <ContactsListText>Contacts list is empty</ContactsListText>\n      )}\n    </ContactListStyled>\n  );\n};\n","export const toFilter = (array, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return array.filter(({ name, number }) => {\n    const isName = name.toLowerCase().includes(normalizedFilter);\n    const isNumber = normalizedFilter\n      .split('')\n      .every((letter, idx) => letter === number[idx]);\n    return isNumber || isName;\n  });\n};\n","import { TbLogout } from 'react-icons/tb';\nimport styled from 'styled-components';\n\nexport const LogoutBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  p {\n    font-size: 16px;\n  }\n`;\n\nexport const LogoutIconStyled = styled(TbLogout)`\n  width: 18px;\n  height: 18px;\n  color: #131313;\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(14, 100, 210, 0.9);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logOutUser } from 'redux/userAuth/operations';\nimport { selectUser } from 'redux/userAuth/selectors';\nimport { LogoutBox, LogoutIconStyled } from './LogOut.styled';\n\nexport const LogOut = () => {\n  const { name } = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(logOutUser());\n  };\n\n  return (\n    <LogoutBox>\n      <p>Hi, {name?.split(' ')[0]}</p>\n      <LogoutIconStyled onClick={handleClick} />\n    </LogoutBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactFormStyled = styled.form`\n  position: absolute;\n  z-index: 3;\n  bottom: -260px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  width: 312px;\n  padding: 20px;\n\n  border-radius: 5px;\n  box-shadow: 0px -4px 10px rgba(0, 0, 0, 0.2);\n  background: rgba(255, 255, 255, 1);\n\n  transition: transform 0.3s ease;\n\n  transform: translateY(\n    ${({ $isCreateMenuOpen }) => $isCreateMenuOpen && '-280px'}\n  );\n\n  input {\n    width: 100%;\n    height: 36px;\n    padding: 8px;\n\n    border-radius: 10px;\n    border: 1px solid rgba(0, 0, 0, 0.4);\n    background: rgba(255, 255, 255, 0.08);\n  }\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 36px;\n\n    padding: 10px 20px;\n    margin-top: 16px;\n    margin-bottom: 16px;\n\n    cursor: pointer;\n    text-align: center;\n\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n    border-radius: 5px;\n    border: 1px solid rgba(0, 0, 0, 0.4);\n    background-color: rgba(14, 100, 210, 0.9);\n    color: rgba(255, 255, 255, 0.9);\n\n    transition: background-color 0.3s, color 0.3s;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n    &:hover {\n      background-color: rgba(14, 100, 210, 1);\n    }\n\n    &:active {\n      background-color: rgba(14, 100, 210, 1);\n      transform: scale(0.98);\n      transition: transform 0.1s;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  font-size: 12px;\n  font-weight: bold;\n\n  p {\n    color: red;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n\n  font-size: 12px;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { ButtonBox, ContactFormStyled, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { schemaContactForm } from 'utils/shema';\n\nexport const ContactForm = ({ closeCreateContact, isCreateMenuOpen }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schemaContactForm),\n  });\n\n  const items = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = async preData => {\n    const data = {\n      name: preData.name,\n      number: preData.phone,\n    };\n    const isContactExist = items.some(\n      ({ name }) => name.toLowerCase() === data.name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      toast.error(`${data.name} is already in contacts`);\n      return;\n    }\n\n    const isFullField = await dispatch(addContact(data));\n    if (isFullField) {\n      closeCreateContact();\n    }\n\n    reset();\n  };\n\n  return (\n    <ContactFormStyled\n      onSubmit={handleSubmit(onSubmit)}\n      $isCreateMenuOpen={isCreateMenuOpen}\n    >\n      <Label>\n        FullName\n        <input {...register('name')} />\n        <p>{errors.name?.message}</p>\n      </Label>\n      <Label>\n        Phone\n        <input {...register('phone')} />\n        <p>{errors.phone?.message}</p>\n      </Label>\n      <ButtonBox>\n        <button type=\"submit\">Create</button>\n        <button type=\"button\" onClick={closeCreateContact}>\n          Close\n        </button>\n      </ButtonBox>\n    </ContactFormStyled>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport {\n  AddButton,\n  AddIconStyled,\n  PhoneBookHeader,\n  PhoneBookStyled,\n} from './PhoneBook.styled';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { LogOut } from 'components/LogOut/LogOut';\nimport { selectStatusAuth } from 'redux/userAuth/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst PhoneBook = () => {\n  const [isCreateMenuOpen, setCreateMenuOpen] = useState(false);\n  const { isLoggedIn } = useSelector(selectStatusAuth);\n\n  const hadleCloseMenu = () => setCreateMenuOpen(!isCreateMenuOpen);\n\n  return (\n    <PhoneBookStyled>\n      <PhoneBookHeader>\n        <h3>PHONEBOOK</h3>\n        <LogOut />\n      </PhoneBookHeader>\n      <Filter />\n\n      <ContactForm\n        closeCreateContact={hadleCloseMenu}\n        isCreateMenuOpen={isCreateMenuOpen}\n      />\n\n      <p>Contacts</p>\n      {isLoggedIn && <ContactList />}\n      <AddButton onClick={hadleCloseMenu}>\n        <AddIconStyled />\n      </AddButton>\n    </PhoneBookStyled>\n  );\n};\n\nexport default PhoneBook;\n","import * as yup from 'yup';\n\nexport const schemaContactForm = yup.object({\n  name: yup.string().required('Name is required').trim(),\n  phone: yup\n    .number()\n    .typeError(\"That doesn't look like a phone number\")\n    .positive(\"A phone number can't start with a minus\")\n    .integer(\"A phone number can't include a decimal point\")\n    .min(8)\n    .required('A phone number is required'),\n});\n\nexport const schemaLoginForm = yup.object({\n  email: yup\n    .string()\n    .email('Email must be a valid')\n    .required('Email is required')\n    .trim(),\n  password: yup.string().required('Password is required').trim(),\n});\n\nexport const schemaSigninForm = yup.object({\n  name: yup.string().required('Name is required').trim(),\n  email: yup\n    .string()\n    .email('Email must be a valid')\n    .required('Email is required')\n    .trim(),\n  password: yup.string().required('Password is required').trim(),\n});\n"],"names":["PhoneBookStyled","styled","_templateObject","_taggedTemplateLiteral","AddButton","_templateObject2","PhoneBookHeader","_templateObject3","AddIconStyled","MdAddCircle","_templateObject4","Label","FilterIcons","RiFindReplaceLine","Filter","filter","useSelector","selectFilter","dispatch","useDispatch","_jsxs","children","_jsx","type","name","value","onChange","evt","setFilter","target","placeholder","FcBusinessman","FcBusinesswoman","FcManager","FcAssistant","FcCustomerSupport","ContactItem","ContactBox","ContactBoxText","NameContact","PhoneContact","_templateObject5","DeleteIconStyled","TiDelete","_templateObject6","Avatar","_templateObject7","Contact","_ref","id","phone","avatar","isLoading","selectLoader","ref","useRef","onClick","current","currentTarget","deleteContact","disabled","ContactListStyled","ContactsListText","ContactList","items","selectContacts","useEffect","controller","AbortController","fetchContacts","signal","abort","filtredContacts","array","normalizedFilter","toLowerCase","number","isName","includes","split","every","letter","idx","toFilter","Boolean","length","map","iconsSet","LogoutBox","LogoutIconStyled","TbLogout","LogOut","selectUser","logOutUser","ContactFormStyled","$isCreateMenuOpen","ButtonBox","ContactForm","_errors$name","_errors$phone","closeCreateContact","isCreateMenuOpen","_useForm","useForm","resolver","yupResolver","schemaContactForm","register","handleSubmit","reset","errors","formState","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","preData","data","_context","prev","next","some","_ref3","toast","concat","abrupt","addContact","sent","stop","_x","apply","arguments","_objectSpread","message","_useState","useState","_useState2","_slicedToArray","setCreateMenuOpen","isLoggedIn","selectStatusAuth","hadleCloseMenu","yup","required","trim","typeError","positive","integer","min","schemaLoginForm","email","password","schemaSigninForm"],"sourceRoot":""}